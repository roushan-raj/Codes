
public class Q14_Last_Digit_After_Power {
	
	public static int LastDigit(int input1, int input2) {
		int val = (int)Math.pow(input2, input1);
		System.out.println(val);
		
		int temp = 0;
		return temp = val % 10;
		
	}
	
	static int Modulo(int a, char b[]) {
       
        int mod = 0;
 
        for (int i = 0; i < b.length; i++)
            mod = (mod * 10 + b[i] - '0') % a;
 
        return mod; 
    }
 
   
    public static int helper(char a[], char b[]) {
        int len_a = a.length, len_b = b.length;

        if (len_a == 1 && len_b == 1 && b[0] == '0' && a[0] == '0')
            return 1;
 
        if (len_b == 1 && b[0] == '0')
            return 1;
        
         if (len_a == 1 && a[0] == '0')
            return 0;
 
        int exp = (Modulo(4, b) == 0) ? 4 : Modulo(4, b);
 
        int res = (int)(Math.pow(a[len_a - 1] - '0', exp));
 
        return res % 10;
    }
    
    public static int findLastDigit(int exp, int base) {
    	String temp1 = Integer.toString(exp);
    	String temp2 = Integer.toString(base);
    	
    	char [] arr2 = temp1.toCharArray();
    	char [] arr1 = temp2.toCharArray();
    	
    	return helper(arr1, arr2);
    }
	

	public static void main(String[] args) {
		int exp = 2;
		int base = 6;
		
		System.out.println(findLastDigit(exp, base));
	}

}
